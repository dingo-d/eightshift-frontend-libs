// stylelint-disable number-max-precision, selector-max-specificity, declaration-no-important, max-nesting-depth

$es-spacings: (
	'xxs': '0.125rem',
	'xs': '0.25rem',
	's': '0.5rem',
	'm': '1rem',
	'l': '1.5rem',
	'xl': '2rem',
	'xxl': '4rem',
	'3xl': '8rem',
	'4xl': '12rem',
	'5xl': '16rem',
);

$es-text-aligns: (
	'left': 'left',
	'center': 'center',
	'right': 'right',
	'justify': 'justify',
);

$es-utility-props: (
	'mt': (
		'cssProp': 'margin-top',
		'values': $es-spacings,
		'valuePrefix': '',
	),
	'mb': (
		'cssProp': 'margin-bottom',
		'values': $es-spacings,
		'valuePrefix': '',
	),
	'ml': (
		'cssProp': 'margin-left',
		'values': $es-spacings,
		'valuePrefix': '',
	),
	'mr': (
		'cssProp': 'margin-right',
		'values': $es-spacings,
		'valuePrefix': '',
	),
	'm': (
		'cssProp': 'margin',
		'values': $es-spacings,
		'valuePrefix': '',
	),
	'pt': (
		'cssProp': 'padding-top',
		'values': $es-spacings,
		'valuePrefix': '',
	),
	'pb': (
		'cssProp': 'padding-bottom',
		'values': $es-spacings,
		'valuePrefix': '',
	),
	'pl': (
		'cssProp': 'padding-left',
		'values': $es-spacings,
		'valuePrefix': '',
	),
	'pr': (
		'cssProp': 'padding-right',
		'values': $es-spacings,
		'valuePrefix': '',
	),
	'p': (
		'cssProp': 'padding',
		'values': $es-spacings,
		'valuePrefix': '',
	),
	'text-align': (
		'cssProp': 'text-align',
		'values': $es-text-aligns,
		'valuePrefix': '',
	)
);

// Generic utility classes (defined in maps above).
@each $propShorthand, $propData in $es-utility-props {
	$propCssName: map-get($propData, 'cssProp');
	$values: map-get($propData, 'values');

	@each $size, $value in $values {
		.es-#{$propShorthand}-#{$size} {
			#{$propCssName}: #{$value};
		}

		.es-#{$propShorthand}-#{$size}-important {
			#{$propCssName}: #{$value} !important;
		}

		.-es-#{$propShorthand}-#{$size} {
			#{$propCssName}: -#{$value};
		}

		.-es-#{$propShorthand}-#{$size}-important {
			#{$propCssName}: -#{$value} !important;
		}
	}
};

// Default WP field spacing.
.es-has-wp-field-v-space {
	margin-top: 1.5rem;
	margin-bottom: 1.5rem;
}

.es-has-wp-field-b-space {
	margin-bottom: 1.5rem;
}

.es-has-wp-field-t-space {
	margin-top: 1.5rem;
}

// A11y high-visibility outline.
// Note: could override any current drop shadows!
.es-hi-vis-outline {
	box-shadow: 0 0 0 1px #FFFFFF, 0 0 0 2px #111111;
}

// Sets the toolbar/button icon size if the default 'iconSize' prop doesn't work.
.es-toolbar-icon-24 {
	& > button > svg {
		width: 1.5rem;
		height: 1.5rem;
	}
}

.es-button-icon-24 {
	& > svg {
		width: 1.5rem;
		height: 1.5rem;
	}
}

// Flex container with items space-between, gap and a slight padding.
.es-flex-between {
	display: flex;
	align-items: center;
	justify-content: space-between;
	gap: 0.5rem;
	width: 100%;
	padding: 0.25rem 0;
}

// Vertical flex containers with gaps (and optional item wrapping).
.es-v-spaced {
	display: flex;
	flex-direction: column;
	gap: 0.5rem;
}

.es-v-spaced-wrap {
	display: flex;
	flex-direction: column;
	gap: 0.5rem;
	flex-wrap: wrap;
}

.es-v-end {
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: flex-end;
	gap: 0.5rem;
}

.es-v-end-wrap {
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: flex-end;
	gap: 0.5rem;
	flex-wrap: wrap;
}

.es-v-start {
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: flex-start;
	gap: 0.5rem;
}

.es-v-start-wrap {
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: flex-start;
	gap: 0.5rem;
	flex-wrap: wrap;
}

.es-v-center {
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: flex-start;
	gap: 0.5rem;
}

.es-v-center-wrap {
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
	gap: 0.5rem;
	flex-wrap: wrap;
}

// Horizontal flex containers with gaps (and optional item wrapping).
.es-h-spaced {
	display: flex;
	align-items: center;
	gap: 0.5rem;
}

.es-h-spaced-wrap {
	display: flex;
	align-items: center;
	gap: 0.5rem;
	flex-wrap: wrap;
}

.es-h-between {
	display: flex;
	align-items: center;
	justify-content: space-between;
	gap: 0.5rem;
}

.es-h-between-wrap {
	display: flex;
	align-items: center;
	justify-content: space-between;
	gap: 0.5rem;
	flex-wrap: wrap;
}

.es-h-end {
	display: flex;
	align-items: center;
	justify-content: flex-end;
	gap: 0.5rem;
}

.es-h-end-wrap {
	display: flex;
	align-items: center;
	justify-content: flex-end;
	gap: 0.5rem;
	flex-wrap: wrap;
}

.es-h-start {
	display: flex;
	align-items: center;
	justify-content: flex-start;
	gap: 0.5rem;
}

.es-h-start-wrap {
	display: flex;
	align-items: center;
	justify-content: flex-start;
	gap: 0.5rem;
	flex-wrap: wrap;
}

.es-h-center {
	display: flex;
	align-items: center;
	justify-content: center;
	gap: 0.5rem;
}

.es-h-center-wrap {
	display: flex;
	align-items: center;
	justify-content: center;
	gap: 0.5rem;
	flex-wrap: wrap;
}

// Helper to disable default Gutenberg field spacing (e.g. for inlining input fields).
.es-no-field-spacing {
	margin-bottom: 0 !important;

	.components-base-control__field {
		margin-bottom: 0 !important;
	}
}

// Basic layouts.
.es-fifty-fifty-h {
	display: grid;
	grid-template-columns: 1fr 1fr;
	grid-gap: 1rem;
}

.es-fifty-fifty-auto-h {
	display: grid;
	grid-template-columns: 1fr 1fr auto;
	grid-gap: 1rem;
}

// Grid align helpers.
@for $eblCol from 1 through 12 {
	.es-col-#{$eblCol} {
		grid-column: #{$eblCol};
	}
}

@for $eblRow from 1 through 12 {
	.es-row-#{$eblRow} {
		grid-row: #{$eblRow};
	}
}

// Gutenberg Modal max-widths.
.es-modal-max-width-s {
	.components-modal__content {
		max-width: 24rem;
	}
}

.es-modal-max-width-m {
	.components-modal__content {
		max-width: 36rem;
	}
}

.es-modal-max-width-l {
	.components-modal__content {
		max-width: 40rem;
	}
}

.es-modal-max-width-xl {
	.components-modal__content {
		max-width: 44rem;
	}
}

.es-modal-max-width-xxl {
	.components-modal__content {
		max-width: 48rem;
	}
}

.es-modal-max-width-3xl {
	.components-modal__content {
		max-width: 56rem;
	}
}

.es-modal-max-width-4xl {
	.components-modal__content {
		max-width: 60rem;
	}
}

// stylelint-enable number-max-precision, selector-max-specificity, declaration-no-important, max-nesting-depth
